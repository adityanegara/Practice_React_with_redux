{"version":3,"sources":["components/profile/Profile.js","components/activity_list/Activity.js","components/activity_list/ActivityList.js","App.js","reducers/index.js","index.js"],"names":["Profile","img","name","timeSelected","onDaySelected","onWeekSelected","onMonthSelected","renderActive","button","className","src","onClick","Activity","activity","selectedTime","style","backgroundColor","backgroundImage","time","week","lastWeek","day","lastDay","month","lastMonth","connect","state","props","useEffect","console","log","activites","map","id","App","useState","setSelectedTime","combineReducers","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.50d5aa8d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Profile.css';\r\n\r\nconst Profile = ({img, name, timeSelected, onDaySelected, onWeekSelected, onMonthSelected}) =>{\r\n    const renderActive = (button) =>{\r\n        if(button === timeSelected){\r\n            return 'button-active';\r\n        }else{\r\n            return '';\r\n        }\r\n    }; \r\n    return (\r\n        <div className='profile'>\r\n            <div className='profile-section'>\r\n                <div className='profile-image'>\r\n                    <img src={img}></img>\r\n                </div>\r\n                <div className='profile-name'>\r\n                    <p>Report for</p>\r\n                    <p>{name}</p>\r\n                </div>\r\n            </div>\r\n        \r\n            <div className='profile-selector'>\r\n                <button className={renderActive('DAY_SELECTED')} onClick={()=>{onDaySelected()}}>Daily</button>\r\n                <button className={renderActive('WEEK_SELECTED')}  onClick={()=>{onWeekSelected()}}>Weekly</button>\r\n                <button className={renderActive('MONTH_SELECTED')} onClick={()=>{onMonthSelected()}}>Monthly</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import {React} from \"react\";\r\nimport './Activity.css';\r\n\r\nconst Activity = ({activity, selectedTime}) =>{\r\n    if(selectedTime === 'WEEK_SELECTED'){\r\n        return (\r\n            <div className='activity' style={{backgroundColor:`${activity.backgroundColor}`}}>\r\n                <div style={{backgroundColor:`${activity.backgroundColor}`,    backgroundImage: `url(${activity.backgroundImage})` }} className='activity-background'>\r\n                </div>\r\n         \r\n                    <div className='activity-info'>\r\n                        <div className='activity-name'>\r\n                            <p>{activity.name}</p>\r\n                            <div className='activity-satay'>\r\n                                <img src='./images/icon-ellipsis.svg'></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className='activity-time'>\r\n                            <p>{activity.time.week}hrs</p>\r\n                            <p>Last Week - {activity.time.lastWeek}hrs</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else if(selectedTime === 'DAY_SELECTED'){\r\n        return (\r\n            <div className='activity' style={{backgroundColor:`${activity.backgroundColor}`}}>\r\n                <div style={{backgroundColor:`${activity.backgroundColor}`,    backgroundImage: `url(${activity.backgroundImage})` }} className='activity-background'>\r\n                </div>\r\n                <div className='activity-info'>\r\n                    <div className='activity-name'>\r\n                        <p>{activity.name}</p>\r\n                        <div className='activity-satay'>\r\n                            <img src='./images/icon-ellipsis.svg'></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className='activity-time'>\r\n                        <p>{activity.time.day}hrs</p>\r\n                        <p>Last Day - {activity.time.lastDay}hrs</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className='activity' style={{backgroundColor:`${activity.backgroundColor}`}}>\r\n                <div style={{backgroundColor:`${activity.backgroundColor}`,    backgroundImage: `url(${activity.backgroundImage})` }} className='activity-background'>\r\n                </div>\r\n                <div className='activity-info'>\r\n                    <div className='activity-name'>\r\n                        <p>{activity.name}</p>\r\n                        <div className='activity-satay'>\r\n                            <img src='./images/icon-ellipsis.svg'></img>\r\n                        </div>\r\n                    </div>\r\n                    <div className='activity-time'>\r\n                        <p>{activity.time.month}hrs</p>\r\n                        <p>Last Month - {activity.time.lastMonth}hrs</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default Activity;","import {React, useEffect} from 'react';\r\nimport Activity from './Activity';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './ActivityList.css'\r\nconst ActivityList = (props) =>{\r\n    useEffect(()=>{\r\n        console.log(props);\r\n    })\r\n    const renderActivities = (activites, selectedTime) =>{\r\n        console.log(selectedTime);\r\n        const activitesElement =  activites.map((activity)=>{\r\n            return (\r\n                <Activity key={activity.id} activity={activity} selectedTime={selectedTime}/>\r\n            )\r\n        })\r\n        return activitesElement;\r\n    }\r\n    return(\r\n        <div className='activity-list'>\r\n            {renderActivities(props.activity, props.timeSelected)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        activity : state.activity};\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(ActivityList)\r\n// export default ActivityList;\r\n","import {React, useState} from 'react';\r\nimport Profile from './components/profile/Profile';\r\nimport ActivityList from './components/activity_list/ActivityList';\r\n\r\nconst App = () =>{\r\n    const [timeSelected, setSelectedTime] = useState('WEEK_SELECTED');\r\n    \r\n    const handleDaySelected = () =>{\r\n        setSelectedTime('DAY_SELECTED');\r\n    }\r\n    const handleWeekSelected = () =>{\r\n        setSelectedTime('WEEK_SELECTED');\r\n    }\r\n    const handleMonthSelected = () =>{\r\n        setSelectedTime('MONTH_SELECTED');\r\n    }\r\n\r\n    return (\r\n        <div className='dashboard'>\r\n            <Profile \r\n                name='Aditya Negara' \r\n                img='./images/profile-adit.png'\r\n                onDaySelected = {handleDaySelected}\r\n                onWeekSelected = {handleWeekSelected}\r\n                onMonthSelected = {handleMonthSelected}\r\n                timeSelected= {timeSelected}\r\n                /> \r\n            <ActivityList timeSelected={timeSelected}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import {combineReducers} from 'redux';\r\n\r\nconst activityReducers = () =>{\r\n    return [\r\n        {\r\n            name : 'Work',\r\n            backgroundImage : './images/icon-work.svg',\r\n            backgroundColor : '#FF8B64',\r\n            id : 1,\r\n            time : {\r\n                day : 7,\r\n                lastDay : 8,\r\n                week : 32,\r\n                lastWeek : 30,\r\n                month : 128,\r\n                lastMonth : 110,\r\n            }\r\n        },\r\n        {\r\n            name: 'Play',\r\n            backgroundImage : './images/icon-play.svg',\r\n            backgroundColor : '#56C2E6',\r\n            id : 2,\r\n            time : {\r\n                day : 2,\r\n                lastDay : 1,\r\n                week : 10,\r\n                lastWeek : 11,\r\n                month : 40,\r\n                lastMonth : 38\r\n            }\r\n        },\r\n        {\r\n            name : 'Study',\r\n            backgroundImage : './images/icon-study.svg',\r\n            backgroundColor : '#FF5E7D',\r\n            id : 3,\r\n            time : {\r\n                day : 1,\r\n                lastDay : 1,\r\n                week : 7,\r\n                lastWeek : 6,\r\n                month : 28,\r\n                lastMonth : 24\r\n            }\r\n        },\r\n        {\r\n            name : 'Excercise',\r\n            backgroundImage : './images/icon-exercise.svg',\r\n            backgroundColor :  '#4BCF83',\r\n            id : 4,\r\n            time : {\r\n                day : 2,\r\n                lastDay : 1,\r\n                week : 10,\r\n                lastWeek : 9,\r\n                month : 40,\r\n                lastMonth : 36,\r\n            }\r\n        },\r\n        {\r\n            name: 'Social',\r\n            backgroundImage:'./images/icon-social.svg',\r\n            backgroundColor : '#7235D1',\r\n            id: 5,\r\n            time: {\r\n                day: 1,\r\n                lastDay: 1,\r\n                week: 5,\r\n                lastWeek: 7,\r\n                month: 20,\r\n                lastMonth: 28\r\n            }\r\n        },\r\n        {\r\n            name: 'Self Care',\r\n            backgroundImage:'./images/icon-self-care.svg',\r\n            backgroundColor : '#F1C75B',\r\n            id:6,\r\n            time: {\r\n                day: 1,\r\n                lastDay: 1,\r\n                week: 6,\r\n                lastWeek:7,\r\n                month:24,\r\n                lastMonth:23\r\n            }\r\n        }\r\n    ];\r\n};\r\n\r\nconst selectedTimeReducer = (action = null) =>{\r\n    return 'MONTH_SELECTED'\r\n}\r\n\r\nexport default combineReducers({\r\n    activity: activityReducers,\r\n    selectedTime : selectedTimeReducer\r\n});\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport reducers from './reducers'\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App/>\r\n    </Provider>, \r\n    document.getElementById('root'));"],"sourceRoot":""}